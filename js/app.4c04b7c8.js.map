{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?4241","webpack:///./src/App.vue?f0e2","webpack:///./src/jc-web-peer/src/errors.js","webpack:///./src/jc-web-peer/src/signalingChannel.js","webpack:///./src/jc-web-peer/src/device.js","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/assets/logo.png"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_a226a2f2_render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","_s","status","alt","src","directives","rawName","expression","type","placeholder","domProps","on","input","$event","target","composing","deviceCode","disabled","click","onconnect","connectBtnText","runBtnDisabled","onrun","runButtonText","drag","action","multiple","slot","modifiers","number","change","onx","x","_n","blur","$forceUpdate","ony","y","readonly","z","staticRenderFns","DeviceError","freeze","OperationCancelled","Timeout","DeviceConnectionError","ChannelConnectionError","DeviceNotFound","CodePrefix","DuplicatedUsername","ChannelError","ChannelExists","FailToCreate","Canceled","SignalingChannel","_this","classCallCheck","_eventListeners","_dispatchEvent","event","forEach","listener","source","_channel","createClass","handler","filter","element","addEventListener","message","Error","WebSocket","_SignalingChannel","_class","host","_this2","possibleConstructorReturn","getPrototypeOf","inherits","cancelToken","options","_this3","timeout","_connectionPromise","Promise","accept","reject","timeoutID","setupConnectionListeners","handleOpen","handleClose","handleError","tearDownConnectionListeners","removeEventListener","clearTimeout","_setupEventProxies","cancel","reason","close","setTimeout","readyState","err","send","MessageChannel","_SignalingChannel2","_class2","url","windowName","windowFeatures","deviceUrl","_this4","_this5","href","concat","document","location","origin","_proxyWindow","open","_handleMessage","messageEvent","URL","ports","start","undefined","postMessage","_this6","Device","signalingChannel","_signalingChannel","_id","_internalHandlers","responseHandler","onresponse","jsonString","TextDecoder","decode","JSON","parse","dataHandler","ondata","closeHandler","onclose","restartHandler","onrestart","_cancelToken","canceled","oncancel","_setupRTCChannels","retryCount","delay","retryDelay","_controlChannel","onmessage","_dataChannel","_deviceConnection","pause","duration","res","withRetry","fn","retVal","arguments","catch","then","stepCancelToken","withCancel","token","_len","args","Array","_key","resolve","connectSignalChannel","signalChannelCancelToken","connect","console","log","timerID","connectionPath","createOffer","offer","setLocalDescription","_negotiateConnection","arg","finalize","_removeSignalingHooks","rejection","disconnect","_notifyCloseEvent","disconnectSignalingChannel","_restartTimeoutId","CloseEvent","commandInfo","connected","TextEncoder","encode","stringify","p_u8DataArray","p_command","commandU8Array","SEPARATOR","fullU8ArrayToSend","Uint8Array","set","FRAME_SIZE","arrayLength","HEADER_SIZE","MAX_FRAME_DATA_SIZE","frameHeader","HeaderSize","DataSize","FrameSize","TotalDataSize","TotalFrames","Math","ceil","FrameIndex","DataOffset","dataPacketArray","_writeU32NumberToU8Array","min","p_number","p_array","p_arrayIndex","arrayBuffer","ArrayBuffer","view","DataView","setUint32","config","iceServers","urls","isFirefox","InstallTrigger","iceServer","RTCPeerConnection","onicecandidate","candidate","_negotiationChannel","address","command","oniceconnectionstatechange","iceConnectionState","CustomEvent","createDataChannel","binaryType","_installSignalingHooks","localDescription","onChannelOpen","onopen","onerror","onChannelError","error","_handleSignalingMessage","setRemoteDescription","answer","addIceCandidate","_handleSignalingError","_handleSignalingClose","code","connectedIceStates","find","InstrumentState","Unconnect","Idle","Connecting","Running","Appvue_type_script_lang_js_","components","username","instrument","signalServer","methods","stop","configureAndRun","afterConnected","initialDeviceCommand","device","p_Data","p_Response","dsdb","hasError","sendCommand","device_Device","signalingChannel_SignalingChannel","watch","newVal","src_Appvue_type_script_lang_js_","component","componentNormalizer","App","Vue","use","ElementUI","locale","productionTip","render","h","$mount"],"mappings":"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","file":"js/app.4c04b7c8.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"sfp-title\"},[_c('h3',{staticClass:\"status\"},[_vm._v(\"DSDB      \"+_vm._s(_vm.status))])]),_c('div',{staticClass:\"control\"},[_c('img',{attrs:{\"id\":\"logo\",\"alt\":\"Vue logo\",\"src\":require(\"./assets/logo.png\")}}),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.deviceCode),expression:\"deviceCode\"}],staticClass:\"device-id\",attrs:{\"type\":\"text\",\"name\":\"Device Code\",\"placeholder\":\"Input device code here\"},domProps:{\"value\":(_vm.deviceCode)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.deviceCode=$event.target.value}}}),_c('button',{staticClass:\"connect btn\",attrs:{\"disabled\":this.status==='Connecting'},on:{\"click\":_vm.onconnect}},[_vm._v(\"\\n        \"+_vm._s(_vm.connectBtnText)+\" \\n      \")]),_c('button',{staticClass:\"run btn\",attrs:{\"disabled\":_vm.runBtnDisabled},on:{\"click\":_vm.onrun}},[_vm._v(\"\\n        \"+_vm._s(_vm.runButtonText)+\"\\n      \")])]),_c('div',{attrs:{\"id\":\"main-panel\"}},[_c('div',{attrs:{\"id\":\"bitfile-select\"}},[_c('el-upload',{staticClass:\"upload-bitfile\",attrs:{\"drag\":\"\",\"action\":\"do-nothing\",\"multiple\":\"\"}},[_c('i',{staticClass:\"el-icon-upload\"}),_c('div',{staticClass:\"el-upload__text\"},[_vm._v(\"Drag bitfile here or \"),_c('em',[_vm._v(\"Click Here\")])]),_c('div',{staticClass:\"el-upload__tip\",attrs:{\"slot\":\"tip\"},slot:\"tip\"},[_vm._v(\"Only support *.lvbitx *.bin\")])])],1),_c('div',{attrs:{\"id\":\"register-list\"}},[_c('div',{attrs:{\"id\":\"input-pins\"}},[_c('h3',[_vm._v(\"Input Pins\")]),_c('p',[_vm._v(\"x\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.x),expression:\"x\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"name\":\"x\",\"id\":\"\"},domProps:{\"value\":(_vm.x)},on:{\"change\":_vm.onx,\"input\":function($event){if($event.target.composing){ return; }_vm.x=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}}),_c('p',[_vm._v(\"y\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.y),expression:\"y\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"name\":\"y\",\"id\":\"\"},domProps:{\"value\":(_vm.y)},on:{\"change\":_vm.ony,\"input\":function($event){if($event.target.composing){ return; }_vm.y=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}})]),_c('div',{attrs:{\"id\":\"output-pins\"}},[_c('h3',[_vm._v(\"Output Pins\")]),_c('p',[_vm._v(\"z\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model.number\",value:(_vm.z),expression:\"z\",modifiers:{\"number\":true}}],attrs:{\"type\":\"number\",\"name\":\"z\",\"id\":\"\",\"readonly\":\"\"},domProps:{\"value\":(_vm.z)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.z=_vm._n($event.target.value)},\"blur\":function($event){return _vm.$forceUpdate()}}})])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * An enumeration of connection errors returned by the device.\n */\nconst DeviceError = Object.freeze({\n\t/** @type {String} */\n\tOperationCancelled: 'Operation cancelled',\n\t/** @type {String} */\n\tTimeout: 'Timeout',\n\t/** @type {String} */\n\tDeviceConnectionError: 'Could not connect to device',\n\t/** @type {String} */\n\tChannelConnectionError: 'Could not connect to server',\n\t/** @type {String} */\n\tDeviceNotFound: 'Could not locate the device',\n\t/** @type {String} */\n\tCodePrefix: 'Invalid device ID prefix',\n\t/** @type {String} */\n\tDuplicatedUsername: 'Duplicated name',\n});\n\n/**\n * An enumeration of errors returned by the signaling channel\n */\nconst ChannelError = Object.freeze({\n\t/** @type {String} */\n\tChannelExists: 'Signaling channel already exists',\n\t/** @type {String} */\n\tFailToCreate: 'Failed to create signaling channel',\n\t/** @type {String} */\n\tTimeout: 'Connection timed out',\n\t/** @type {String} */\n\tCanceled: 'Operation cancelled,',\n});\n\nexport { DeviceError, ChannelError };\n","import { ChannelError } from './errors.js';\n\n/** Base class for the signaling channels used to create a WebRTC conection. */\nexport class SignalingChannel {\n\t/** Create a new signaling channel */\n\tconstructor() {\n\t\t/**\n\t\t * Object to store and lookup event listeners by name\n\t\t * @type {Object.<string, function[]>}\n\t\t * @private\n\t\t */\n\t\tthis._eventListeners = {};\n\n\t\t/**\n\t\t * Proxy the event to all event handlers listening for events of the event's type\n\t\t * @param {Object} event The event being raised\n\t\t * @param {String} event.type The type of the event\n\t\t * @private\n\t\t */\n\t\tthis._dispatchEvent = (event) => {\n\t\t\tif (event.type in this._eventListeners) {\n\t\t\t\tthis._eventListeners[event.type].forEach((listener) => listener.call(event.source, event));\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @type {null}\n\t\t * @private\n\t\t */\n\t\tthis._channel = null;\n\t}\n\n\t/**\n\t * Add a listener for an event that could be raised by the underlying communication channel\n\t * @param {String} type The name of the event\n\t * @param {Function} handler The function to remove\n\t */\n\taddEventListener(type, handler) {\n\t\tif (!(type in this._eventListeners)) {\n\t\t\tthis._eventListeners[type] = [];\n\t\t}\n\n\t\tthis._eventListeners[type].push(handler);\n\t}\n\n\t/**\n\t * Remove a listener from an event that could be raised by the underlying communication channel\n\t * @param {String} type The name of the event\n\t * @param {Function} handler The function to remove\n\t */\n\tremoveEventListener(type, handler) {\n\t\tif (type in this._eventListeners) {\n\t\t\tthis._eventListeners[type] = this._eventListeners[type].filter((element) => element !== handler);\n\t\t}\n\t}\n\n\t/**\n\t * Attach the event handlers to the events of the web socket\n\t * @private\n\t */\n\t_setupEventProxies() {\n\t\tthis._channel.addEventListener('close', this._dispatchEvent);\n\t\tthis._channel.addEventListener('error', this._dispatchEvent);\n\t\tthis._channel.addEventListener('message', this._dispatchEvent);\n\t}\n\n\t/**\n\t * Disconnect the signaling channel, aborting any connection attempt in progress\n\t * @param {Object} message The message being sent to negotiate the peer connection\n\t */\n\tsend(message) { // eslint-disable-line no-unused-vars\n\t\tthrow new Error('function \"send(message)\" needs to be implemented by derived class');\n\t}\n\n\t/**\n\t * Complete any final cleanup. Call this function when the connection has been made.\n\t */\n\tfinalize() {} // eslint-disable-line no-empty-function\n}\n\nSignalingChannel.WebSocket = class extends SignalingChannel {\n\t/**\n\t * Create a WebSocket based signaling channel\n\t * @param {String} host The host address of the server\n\t */\n\tconstructor(host) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The host address of the WebSocket Server\n\t\t * @type {String}\n\t\t */\n\t\tthis.host = host;\n\t}\n\n\t/**\n\t * Open a connection between this object and the signaling server\n\t * @param {Object} cancelToken An object that will be used in allowing asynchronous cancel\n\t * @param {Function} cancelToken.cancel  After the function returns, this field will contain a function that can be called to cancel the connection attempt\n\t * @param {Object} [options] Connection options\n\t * @param {Number} [options.timeout] The time (in milliseconds) each try of a connection can wait before being considered unsuccessful\n\t * @returns {Promise} A Promise that resolves when the web socket to the server has been opened\n\t */\n\tconnect(cancelToken, options) {\n\t\tconst timeout = (options && options.timeout) || 1000;\n\t\tthis._connectionPromise = this._connectionPromise || new Promise((accept, reject) => {\n\t\t\tconst setupConnectionListeners = () => {\n\t\t\t\tthis._channel.addEventListener('open', handleOpen); // eslint-disable-line no-use-before-define\n\t\t\t\tthis._channel.addEventListener('close', handleClose); // eslint-disable-line no-use-before-define\n\t\t\t\tthis._channel.addEventListener('error', handleError); // eslint-disable-line no-use-before-define\n\t\t\t};\n\n\t\t\tconst tearDownConnectionListeners = () => {\n\t\t\t\tif (this._channel) {\n\t\t\t\t\tthis._channel.removeEventListener('open', handleOpen); // eslint-disable-line no-use-before-define\n\t\t\t\t\tthis._channel.removeEventListener('close', handleClose); // eslint-disable-line no-use-before-define\n\t\t\t\t\tthis._channel.removeEventListener('error', handleError); // eslint-disable-line no-use-before-define\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst handleOpen = () => {\n\t\t\t\tclearTimeout(timeoutID); // eslint-disable-line no-use-before-define\n\t\t\t\ttearDownConnectionListeners();\n\t\t\t\tthis._setupEventProxies();\n\t\t\t\tcancelToken.cancel = null;\n\t\t\t\taccept();\n\t\t\t};\n\n\t\t\tconst cancel = (reason) => {\n\t\t\t\tthis._connectionPromise = null;\n\t\t\t\tclearTimeout(timeoutID); // eslint-disable-line no-use-before-define\n\t\t\t\ttearDownConnectionListeners();\n\t\t\t\tif (this._channel) {\n\t\t\t\t\tthis._channel.close();\n\t\t\t\t}\n\n\t\t\t\treject(reason);\n\t\t\t\tthis._dispatchEvent({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\treason,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst handleClose = () => {\n\t\t\t\ttearDownConnectionListeners();\n\t\t\t\treject(ChannelError.FailToCreate);\n\t\t\t};\n\n\t\t\tconst handleError = () => {\n\t\t\t\t/*\n\t\t\t\t\tdoes nothing but swallow web socket exceptions\n\t\t\t\t\twe handle these in the close event anyway.\n\t\t\t\t */\n\t\t\t};\n\n\t\t\tlet timeoutID;\n\n\t\t\tif (timeout) {\n\t\t\t\ttimeoutID = setTimeout(() => cancel(ChannelError.Timeout), timeout);\n\t\t\t}\n\n\t\t\tif (this._channel && this._channel.readyState === 1) {\n\t\t\t\tcancel(ChannelError.ChannelExists);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tthis._channel = new WebSocket(this.host);\n\t\t\t\t\tsetupConnectionListeners();\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(ChannelError.FailToCreate);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcancelToken.cancel = cancel;\n\t\t});\n\n\t\treturn this._connectionPromise;\n\t}\n\n\t/**\n\t * Make sure that the connection to the signaling server has been shut down\n\t */\n\tdisconnect() {\n\t\t// _channel can be null if the connection was not correctly set up in the first place\n\t\tif (this._channel) {\n\t\t\tthis._channel.close();\n\t\t\tthis._channel = null;\n\t\t}\n\n\t\tthis._connectionPromise = null;\n\t}\n\n\t/** @override */\n\tsend(message) {\n\t\tif (this._channel.readyState === 1) {\n\t\t\tthis._channel.send(message);\n\t\t}\n\t}\n};\n\nSignalingChannel.MessageChannel = class extends SignalingChannel {\n\t/**\n\t * Create a signaling channel that works over a message channel through another web page\n\t * @param {String} url The URL of the page that will be the proxy\n\t * @param {String} windowName Then name for the window - used to identify the window (for example for window reuse)\n\t * @param {String} windowFeatures A string describing any properties of the proxy window to be opened\n\t * @param {String} [deviceUrl] The address at which the device is exposing its signaling port\n\t */\n\tconstructor(url, windowName, windowFeatures, deviceUrl) {\n\t\tsuper();\n\n\t\t/**\n\t\t * The url of the proxying web page\n\t\t * @type {String}\n\t\t */\n\t\tthis.url = url;\n\n\t\tthis.windowFeatures = windowFeatures;\n\n\t\t/**\n\t\t * If defined, the URL at which the device has its signaling socket\n\t\t * @type {String}\n\t\t */\n\t\tthis.deviceUrl = deviceUrl;\n\n\t\tthis.windowName = windowName || 'Connection Status';\n\t}\n\n\t/**\n\t * Connect the signaling channel through the proxy page\n\t * @param {Object} cancelToken An object that will used for asynchronous cancel\n\t * @param {Function} cancelToken.cancel  After the function returns, this field will contain a function that can be called to cancel the connection attempt\n\t * @param {Object} [options] Connection options\n\t * @param {Number} [options.timeout=20000] The time (in milliseconds) each try of a connection can wait before being considered unsuccessful\n\t * @returns {Promise} A Promise that resu\n\t */\n\tconnect(cancelToken, options) {\n\t\tconst timeout = (options && options.timeout) || 20000;\n\t\tthis._connectionPromise = this._connectionPromise || new Promise((accept, reject) => {\n\t\t\tlet href = `${this.url}?origin=${document.location.origin}`;\n\n\t\t\tif (this.deviceUrl) {\n\t\t\t\thref += `&deviceServer=${this.deviceUrl}`;\n\t\t\t}\n\n\t\t\tthis._proxyWindow = window.open(href, this.windowName, this.windowFeatures);\n\n\t\t\tlet timeoutID = setTimeout(() => {\n\t\t\t\tcancel(ChannelError.Timeout); // eslint-disable-line no-use-before-define\n\t\t\t}, timeout);\n\n\t\t\tconst cancel = (reason) => {\n\t\t\t\tthis._connectionPromise = null;\n\n\t\t\t\twindow.removeEventListener('message', this._handleMessage);\n\t\t\t\tclearTimeout(timeoutID);\n\n\t\t\t\tif (this._channel) {\n\t\t\t\t\tthis._channel.close();\n\t\t\t\t\tthis._channel = null;\n\t\t\t\t}\n\n\t\t\t\tif (this._proxyWindow) {\n\t\t\t\t\tthis._proxyWindow.close();\n\t\t\t\t\tthis._proxyWindow = null;\n\t\t\t\t}\n\n\t\t\t\treject(reason);\n\t\t\t\tthis._dispatchEvent({\n\t\t\t\t\ttype: 'error',\n\t\t\t\t\treason,\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tthis._handleMessage = (messageEvent) => {\n\t\t\t\tswitch (messageEvent.data) {\n\t\t\t\tcase 'createChannel':\n\t\t\t\t\tif (messageEvent.origin === new URL(this.url).origin && messageEvent.source === this._proxyWindow) {\n\t\t\t\t\t\tclearTimeout(timeoutID);\n\t\t\t\t\t\ttimeoutID = null;\n\t\t\t\t\t\tthis._channel = messageEvent.ports[0];\n\t\t\t\t\t\tthis._setupEventProxies();\n\t\t\t\t\t\tthis._channel.start();\n\t\t\t\t\t\tcancelToken.cancel = null;\n\t\t\t\t\t\taccept();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'closing':\n\t\t\t\t\tif (messageEvent.origin === new URL(this.url).origin\n\t\t\t\t\t\t&& (messageEvent.source === this._proxyWindow || messageEvent.source === undefined)) {\n\t\t\t\t\t\tcancel(ChannelError.Canceled);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.addEventListener('message', this._handleMessage);\n\n\t\t\tcancelToken.cancel = cancel;\n\t\t});\n\n\t\treturn this._connectionPromise;\n\t}\n\n\t/** Disconnect is a no-op for this channel. Once the connection has been established, the window gets closed anyway,\n\t * which means the channel is useless.\n\t */\n\tdisconnect() { // eslint-disable-line no-empty-function\n\t}\n\n\t/**\n\t * @override\n\t */\n\tsend(message) {\n\t\tthis._channel.postMessage(message);\n\t}\n\n\t/**\n\t * @override\n\t */\n\tfinalize() {\n\t\twindow.removeEventListener('message', this._handleMessage);\n\t\tthis._proxyWindow.postMessage('connected', new URL(this.url).origin);\n\t\tthis._channel.close();\n\n\t\tsetTimeout(() => {\n\t\t\tthis._proxyWindow.close();\n\t\t\tthis._proxyWindow = null;\n\t\t}, 3000);\n\n\t\tthis._connectionPromise = null;\n\t}\n};\n","/**\n * An object that represents a remote device\n */\n\n/** global SignalingChannel */\nimport { DeviceError, ChannelError } from './errors.js';\n\n/**\n * Represents a basic general device, providing simple generic message handling\n */\nexport class Device {\n\t/**\n\t *\n\t * @param {SignalingChannel} signalingChannel The signaling channel for setting up the device connection\n\t * @param {String} id The id of the device\n\t */\n\tconstructor(signalingChannel, id) {\n\t\t/**\n\t\t * The server that this device comes from\n\t\t * @type {SignalingChannel}\n\t\t * @private\n\t\t */\n\t\tthis._signalingChannel = signalingChannel;\n\n\t\t/**\n\t\t * The semi-unique server-assigned id of the device\n\t\t * @private\n\t\t */\n\t\tthis._id = id;\n\n\t\tthis._internalHandlers = {\n\t\t\tresponseHandler: (event) => {\n\t\t\t\tif (this.onresponse) {\n\t\t\t\t\tconst jsonString = typeof event.data === 'string' ? event.data : new TextDecoder().decode(event.data);\n\t\t\t\t\tconst message = JSON.parse(jsonString);\n\t\t\t\t\tthis.onresponse(message);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tdataHandler: (event) => {\n\t\t\t\tif (this.ondata) {\n\t\t\t\t\tthis.ondata(event.data);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tcloseHandler: (event) => {\n\t\t\t\tif (this.onclose) {\n\t\t\t\t\tthis.onclose(event.data);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\trestartHandler: (event) => {\n\t\t\t\tif (this.onrestart) {\n\t\t\t\t\tthis.onrestart(event.data);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\n\t\t/**\n\t\t * @callback responseEventHandler\n\t\t * @param {Object}\n\t\t */\n\n\t\t/**\n\t\t * Response handler function for responses (or messages) sent from the remote device\n\t\t * @type {responseEventHandler}\n\t\t */\n\t\tthis.onresponse = null;\n\n\t\t/**\n\t\t * @callback dataEventHandler\n\t\t * @param {Object}\n\t\t */\n\n\t\t/**\n\t\t * Handler function for data send from the remote device\n\t\t * @type {dataEventHandler}\n\t\t */\n\t\tthis.ondata = null;\n\n\t\t/**\n\t\t * @callback restartEventHandler\n\t\t * @param {Object}\n\t\t */\n\n\t\t/**\n\t\t * Handler function for restart\n\t\t * @type {restartEventHandler}\n\t\t */\n\t\tthis.onrestart = null;\n\n\t\t/**\n\t\t *\n\t\t * @type {{canceled: boolean, reason: null, cancel: Device._cancelToken.cancel}}\n\t\t * @private\n\t\t */\n\t\tthis._cancelToken = {\n\t\t\tcanceled: false,\n\t\t\treason: null,\n\t\t\tcancel(reason) {\n\t\t\t\tthis.canceled = true;\n\t\t\t\tthis.reason = reason;\n\t\t\t\tif (this.oncancel) {\n\t\t\t\t\tthis.oncancel(reason);\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t}\n\n\t/**\n\t * Get the ID of the device that uniquely identifies it on its server\n\t * @returns {*} The ID of the target device for connection\n\t */\n\tget id() { return this._id; }\n\n\t/**\n\t * Connect the device object to its remote device to allow sending commands and receiving responses and data\n\t * @param {Object} [options] Connection options\n\t * @param {Number} [options.timeout=8000] The time (in milliseconds) each try of a connection can wait before being considered unsuccessful\n\t * @param {Number} [options.retryCount=0] The number of times the connection can be retried\n\t * @param {Number} [options.retryDelay=1000] The time (in milliseconds) that should elapse between retry attempts\n\t * @returns {Promise} A Promise that resolves when the peer connection has been made and the channels are open\n\t */\n\tconnect(options) {\n\t\tif (!this._connectionPromise) {\n\t\t\tthis._cancelToken.canceled = false;\n\t\t\tthis._cancelToken.reason = null;\n\n\t\t\tthis._setupRTCChannels();\n\n\t\t\tconst timeout = (options && options.timeout) || 8000;\n\t\t\tlet retryCount = (options && options.retryCount) || 0;\n\t\t\tconst delay = (options && options.retryDelay) || 1000;\n\n\t\t\tthis._controlChannel.onmessage = this._internalHandlers.responseHandler;\n\t\t\tthis._dataChannel.onmessage = this._internalHandlers.dataHandler;\n\t\t\tthis._deviceConnection.addEventListener('close', this._internalHandlers.closeHandler);\n\n\t\t\t// A pausing promise. Can't fail, doesn't perform any work, but adds a known delay between two Promise resolutions\n\t\t\tconst pause = (duration) => new Promise((res) => setTimeout(res, duration));\n\n\t\t\t// Allows promises to be retried if they fail, up to the number of retries specified. Retry count is function-scoped\n\t\t\t// instead of a parameter to make it easy to limit the entire chain to retrying up to 'n' steps.\n\t\t\tconst withRetry = (fn) => (...args) => {\n\t\t\t\tconst retVal = fn(...args);\n\t\t\t\tif (retVal instanceof Promise) {\n\t\t\t\t\treturn retVal.catch((err) => (retryCount-- > 1 ? pause(delay).then(withRetry(fn)) : Promise.reject(err)));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst stepCancelToken = {};\n\n\t\t\t// Runs the given function only if the token's cancel function has not been called. Otherwise, throws the reason\n\t\t\t// for the cancel so that the promise chain can catch it.\n\t\t\tconst withCancel = (fn, token) => (...args) => {\n\t\t\t\tif (token.canceled) {\n\t\t\t\t\treturn Promise.reject(this._cancelToken.reason);\n\t\t\t\t}\n\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\ttoken.oncancel = (reason) => {\n\t\t\t\t\t\tif (stepCancelToken.cancel) {\n\t\t\t\t\t\t\tstepCancelToken.cancel();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treject(reason);\n\t\t\t\t\t};\n\n\t\t\t\t\tfn(...args).then((result) => token.canceled || resolve(result)).catch((reason) => reject(reason));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tconst connectSignalChannel = (signalChannelCancelToken) => this._signalingChannel.connect(signalChannelCancelToken, { timeout: 6000 }).catch((reason) => {\n\t\t\t\tif (reason === ChannelError.FailToCreate || reason === ChannelError.ChannelExists || reason === ChannelError.Timeout) {\n\t\t\t\t\twindow.console.log(`connectSignalChannel failed with reason ${reason}`);\n\t\t\t\t\treturn Promise.reject(DeviceError.ChannelConnectionError);\n\t\t\t\t} return Promise.reject(reason);\n\t\t\t});\n\n\t\t\tlet timerID = -1;\n\t\t\tconst connectionPath = (withCancel(() => connectSignalChannel(stepCancelToken), this._cancelToken))()\n\t\t\t\t.then(withCancel(() => {\n\t\t\t\t\ttimerID = setTimeout(() => this.cancel(DeviceError.Timeout), timeout);\n\t\t\t\t\treturn this._deviceConnection.createOffer();\n\t\t\t\t}, this._cancelToken))\n\t\t\t\t.then(withCancel((offer) => this._deviceConnection.setLocalDescription(offer), this._cancelToken))\n\t\t\t\t.then(withRetry(withCancel(() => this._negotiateConnection(stepCancelToken), this._cancelToken)))\n\t\t\t\t.then(withCancel((arg) => {\n\t\t\t\t\tthis._signalingChannel.finalize();\n\t\t\t\t\tthis._removeSignalingHooks();\n\t\t\t\t\treturn Promise.resolve(arg);\n\t\t\t\t}, this._cancelToken));\n\n\t\t\tthis._connectionPromise = connectionPath\n\t\t\t\t.then(withCancel((result) => {\n\t\t\t\t\tclearTimeout(timerID);\n\t\t\t\t\treturn Promise.resolve(result);\n\t\t\t\t}, this._cancelToken))\n\t\t\t\t.catch((reason) => {\n\t\t\t\t\tclearTimeout(timerID);\n\t\t\t\t\tthis._removeSignalingHooks();\n\t\t\t\t\tthis._signalingChannel.disconnect();\n\t\t\t\t\tthis._deviceConnection.close();\n\t\t\t\t\tthis._deviceConnection = null;\n\t\t\t\t\tthis._connectionPromise = null;\n\n\t\t\t\t\t// Convert any channel errors into device errors.\n\t\t\t\t\tlet rejection;\n\t\t\t\t\tif (reason === ChannelError.Timeout) {\n\t\t\t\t\t\trejection = Promise.reject(DeviceError.DeviceConnectionError);\n\t\t\t\t\t} else if (reason === ChannelError.Canceled) {\n\t\t\t\t\t\trejection = Promise.reject(DeviceError.OperationCancelled);\n\t\t\t\t\t}\telse {\n\t\t\t\t\t\trejection = Promise.reject(reason);\n\t\t\t\t\t}\n\t\t\t\t\twindow.console.log(`device.connect() failed with reason ${reason}`);\n\t\t\t\t\treturn rejection;\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._connectionPromise;\n\t}\n\n\t/**\n\t * disconnect the signaling channel\n\t */\n\tdisconnectSignalingChannel() {\n\t\tif (this._signalingChannel) {\n\t\t\tthis._signalingChannel.disconnect();\n\t\t}\n\t}\n\n\t/**\n\t * Disconnect from the remote device and shut down the signaling channel if it's still open\n\t */\n\tdisconnect() {\n\t\tif (this._deviceConnection) {\n\t\t\tthis._deviceConnection.close();\n\t\t\tthis._notifyCloseEvent();\n\t\t\tthis._deviceConnection = null;\n\t\t}\n\t\tthis.disconnectSignalingChannel();\n\t\tthis._connectionPromise = null;\n\t}\n\n\t// eslint-disable-next-line require-jsdoc\n\t_notifyCloseEvent() {\n\t\tif (!this._restartTimeoutId && this._deviceConnection) {\n\t\t\tthis._internalHandlers.closeHandler(new CloseEvent('close'));\n\t\t\tthis._deviceConnection = null;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel the connection attempt\n\t * @param {String} reason A string from the DeviceError object indicating the reason cancel was requested\n\t */\n\tcancel(reason) {\n\t\tthis._cancelToken.cancel(reason || DeviceError.OperationCancelled);\n\t}\n\n\t/**\n\t * Send a command to the remote device\n\t * @param {Object} commandInfo The command to send\n\t */\n\tsendCommand(commandInfo) {\n\t\tif (this.connected) {\n\t\t\tthis._controlChannel.send(new TextEncoder().encode(JSON.stringify(commandInfo)));\n\t\t}\n\t}\n\n\t/**\n\t * Send data array Uint8Array to the remote device\n\t * @param {Uint8Array} p_u8DataArray The data to send with the command\n\t * @param {Object} p_command The command to send\n\t */\n\tsendData(p_u8DataArray, p_command) {\n\t\tif (!this.connected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst commandU8Array = new TextEncoder().encode(JSON.stringify(p_command || {}));\n\t\tconst SEPARATOR = new TextEncoder('utf-8').encode('\\r\\n');\n\t\tconst fullU8ArrayToSend = new Uint8Array(commandU8Array.length + SEPARATOR.length + p_u8DataArray.length);\n\t\tfullU8ArrayToSend.set(commandU8Array);\n\t\tfullU8ArrayToSend.set(SEPARATOR, commandU8Array.length);\n\t\tfullU8ArrayToSend.set(p_u8DataArray, commandU8Array.length + SEPARATOR.length);\n\n\t\tconst FRAME_SIZE = 16 * 1024;\n\t\tconst arrayLength = fullU8ArrayToSend.length;\n\n\t\tconst HEADER_SIZE = 7 * 4; // The size of \"frameHeader\" below\n\t\tconst MAX_FRAME_DATA_SIZE = FRAME_SIZE - HEADER_SIZE;\n\t\tconst frameHeader = {\n\t\t\tHeaderSize: HEADER_SIZE,\n\t\t\tDataSize: 0,\n\t\t\tFrameSize: FRAME_SIZE,\n\t\t\tTotalDataSize: arrayLength,\n\t\t\tTotalFrames: Math.ceil(arrayLength / MAX_FRAME_DATA_SIZE),\n\t\t\tFrameIndex: 0,\n\t\t\tDataOffset: 0,\n\t\t};\n\n\t\twhile (frameHeader.DataOffset < arrayLength) {\n\t\t\tif (!this._dataChannel || this._dataChannel.readyState !== 'open') {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Set header to U8 array\n\t\t\tconst dataPacketArray = new Uint8Array(FRAME_SIZE);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.HeaderSize, dataPacketArray, 0);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.TotalDataSize, dataPacketArray, 4);\n\t\t\tframeHeader.DataSize = Math.min(MAX_FRAME_DATA_SIZE, arrayLength - frameHeader.DataOffset);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.DataSize, dataPacketArray, 8);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.FrameSize, dataPacketArray, 12);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.TotalFrames, dataPacketArray, 16);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.FrameIndex, dataPacketArray, 20);\n\t\t\tthis._writeU32NumberToU8Array(frameHeader.DataOffset, dataPacketArray, 24);\n\n\t\t\t// Set the read data to U8 array\n\t\t\tdataPacketArray.set(fullU8ArrayToSend.slice(frameHeader.DataOffset, frameHeader.DataOffset + frameHeader.DataSize), HEADER_SIZE);\n\n\t\t\tthis._dataChannel.send(dataPacketArray);\n\n\t\t\tframeHeader.FrameIndex += 1;\n\t\t\tframeHeader.DataOffset = frameHeader.FrameIndex * MAX_FRAME_DATA_SIZE;\n\t\t}\n\t}\n\n\t// eslint-disable-next-line require-jsdoc\n\t_writeU32NumberToU8Array(p_number, p_array, p_arrayIndex) {\n\t\tconst arrayBuffer = new ArrayBuffer(4);\n\t\tconst view = new DataView(arrayBuffer);\n\t\tview.setUint32(0, p_number, true); // byteOffset = 0; litteEndian = true\n\n\t\tp_array.set(new Uint8Array(arrayBuffer), p_arrayIndex);\n\t\treturn p_array;\n\t}\n\n\t/**\n\t * Retrieve the connected state of the WebRTC connection for this device\n\t * @returns {Boolean} true if the connection has been established, false if not established or closed\n\t */\n\tget connected() {\n\t\t// As strange as 'disconnected' is as a connected state, it's actually a transient state. If the connection\n\t\t// has truly failed it will transition from 'disconnected' to 'failed'.\n\t\tconst connectedIceStates = ['connected', 'completed', 'disconnected'];\n\n\t\treturn !!(this._deviceConnection && connectedIceStates.find((err) => err === this._deviceConnection.iceConnectionState));\n\t}\n\n\t/**\n\t * Create the RTCPeerConnection and data channels that will be needed to negotiate the connection\n\t * @private\n\t */\n\t_setupRTCChannels() {\n\t\t/**\n\t\t * The webrtc connection to the device\n\t\t * @type {RTCPeerConnection}\n\t\t * @private\n\t\t */\n\t\tconst config = { iceServers: [\n\t\t\t{\n\t\t\t\turls: [\n\t\t\t\t\t'stun:stun.multisim.com:3478',\n\t\t\t\t\t'stun:stun.l.google.com:19302',\n\t\t\t\t\t'stun:stun1.l.google.com:19302',\n\t\t\t\t\t'stun:stun2.l.google.com:19302',\n\t\t\t\t\t'stun:stun3.l.google.com:19302',\n\t\t\t\t\t'stun:stun4.l.google.com:19302',\n\t\t\t\t],\n\t\t\t},\n\t\t] };\n\n\t\t// Bug fix for Firefox 57 on Windows... it warns on more than 2 stun servers and fails on more than 5\n\t\tconst isFirefox = typeof InstallTrigger !== 'undefined'; // copied from 'browserdetect.js' since we cant use that here\n\t\tif (isFirefox) {\n\t\t\tconfig.iceServers.forEach((iceServer) => {\n\t\t\t\ticeServer.urls = iceServer.urls.slice(0, 2);\n\t\t\t});\n\t\t}\n\n\t\tthis._deviceConnection = new RTCPeerConnection(config);\n\t\tthis._deviceConnection.onicecandidate = (event) => {\n\t\t\twindow.console.log(`onicecandidate event.candidate = ${event.candidate}`);\n\t\t\tif (event.candidate) {\n\t\t\t\tif (this._negotiationChannel.readyState === 'open') {\n\t\t\t\t\tthis._negotiationChannel.send(new TextEncoder().encode(JSON.stringify(event.candidate)));\n\t\t\t\t} else {\n\t\t\t\t\tthis._signalingChannel.send(JSON.stringify({ address: this.id, command: 'candidate', candidate: event.candidate }));\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._deviceConnection.oniceconnectionstatechange = (event) => {\n\t\t\twindow.console.log(`oniceconnectionstatechange to ${event.target.iceConnectionState}`);\n\t\t\tswitch (event.target.iceConnectionState) {\n\t\t\tcase 'failed':\n\t\t\t{\n\t\t\t\tif (this._restartTimeoutId) {\n\t\t\t\t\t// fail again after reconnection within 60 seconds\n\t\t\t\t\t// I just let the connection fail and do not restart connection again.\n\t\t\t\t\tclearTimeout(this._restartTimeoutId);\n\t\t\t\t\tthis._restartTimeoutId = null;\n\t\t\t\t\tthis._internalHandlers.closeHandler(new CloseEvent('close'));\n\t\t\t\t\tthis.disconnect();\n\t\t\t\t} else {\n\t\t\t\t\tthis._restartTimeoutId = setTimeout(() => {\n\t\t\t\t\t\tthis._restartTimeoutId = null;\n\t\t\t\t\t}, 60 * 1000);\n\t\t\t\t\tthis.disconnect();\n\t\t\t\t\tthis.connect().then(() => {\n\t\t\t\t\t\tthis._internalHandlers.restartHandler(new CustomEvent('restart'));\n\t\t\t\t\t}).catch(() => {\n\t\t\t\t\t\tthis._internalHandlers.closeHandler(new CloseEvent('close'));\n\t\t\t\t\t\tthis.disconnect();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'closed':\n\t\t\t\tthis._notifyCloseEvent();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * The data channel over which raw measurement/etc data will be received\n\t\t * @type {RTCDataChannel}\n\t\t * @private\n\t\t */\n\t\tthis._dataChannel = this._deviceConnection.createDataChannel('data');\n\t\tthis._dataChannel.binaryType = 'arraybuffer';\n\n\t\t/**\n\t\t * The data channel over which commands and responses will be sent/receieved\n\t\t * @type {RTCDataChannel}\n\t\t * @private\n\t\t */\n\t\tthis._controlChannel = this._deviceConnection.createDataChannel('control');\n\t\tthis._controlChannel.binaryType = 'arraybuffer';\n\n\t\t/**\n\t\t * A data channel for handling any additional peer configuration/reconfiguration after a connection is made\n\t\t * so messages can be sent straight between peers instead of through the server.\n\t\t * @type {RTCDataChannel}\n\t\t * @private\n\t\t */\n\t\tthis._negotiationChannel = this._deviceConnection.createDataChannel('rtc-negotiation');\n\t\tthis._negotiationChannel.binaryType = 'arraybuffer';\n\t}\n\n\t/**\n\t * Begin the RTCPeerConnection signaling process\n\t * @param {Object} cancelToken An object to support asynchronous cancel\n\t * @returns {Promise} A Promise that resolves when the connection is successful, and is rejected otherwise\n\t * @private\n\t */\n\t_negotiateConnection(cancelToken) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis._installSignalingHooks(resolve, reject, cancelToken);\n\n\t\t\tthis._signalingChannel.send(JSON.stringify({\n\t\t\t\taddress: this.id,\n\t\t\t\tcommand: 'offer',\n\t\t\t\toffer: this._deviceConnection.localDescription,\n\t\t\t}));\n\t\t});\n\t}\n\n\t/**\n\t * Install hooks to resolve or reject a Promise based on the results of the signaling messages\n\t * @param {Function} resolve Function to be called when the peer connection is opened to resolve the Promise\n\t * @param {Function} reject Function to call to reject the Promise if the connection fails to open\n\t * @param {Object} cancelToken And object used to allow asynchronous cancel\n\t * @private\n\t */\n\t_installSignalingHooks(resolve, reject, cancelToken) {\n\t\tconst cancel = (reason) => {\n\t\t\tthis._removeSignalingHooks();\n\t\t\treject(new Error(reason));\n\t\t};\n\n\t\tcancelToken.cancel = cancel;\n\t\tconst onChannelOpen = () => {\n\t\t\tif (this._dataChannel.readyState === 'open' && this._controlChannel.readyState === 'open' && this._negotiationChannel.readyState === 'open') {\n\t\t\t\tthis._dataChannel.onopen = null;\n\t\t\t\tthis._controlChannel.onopen = null;\n\t\t\t\tthis._negotiationChannel.onopen = null;\n\n\t\t\t\tthis._dataChannel.onerror = null;\n\t\t\t\tthis._controlChannel.onerror = null;\n\t\t\t\tthis._negotiationChannel.onerror = null;\n\t\t\t\tresolve();\n\t\t\t}\n\t\t};\n\n\t\tconst onChannelError = (error) => {\n\t\t\tcancel(error);\n\t\t};\n\n\t\t/**\n\t\t *\n\t\t * @param {Object} event Object describing the message\n\t\t * @param {*} event.address The ID of the remote peer that sent the message\n\t\t * @param {Object} event.data The negotiation message sent by the remote peer\n\t\t */\n\t\tthis._handleSignalingMessage = (event) => {\n\t\t\tconst message = JSON.parse(event.data);\n\n\t\t\tif (message.address === this.id || this.id === 'usb') {\n\t\t\t\tswitch (message.command) {\n\t\t\t\tcase 'answer':\n\t\t\t\t\tthis._deviceConnection.setRemoteDescription(message.answer);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'candidate':\n\t\t\t\t\tthis._deviceConnection.addIceCandidate(message.candidate);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._handleSignalingError = (error) => {\n\t\t\tif (error.reason === ChannelError.Canceled) {\n\t\t\t\tthis.cancel(error.reason);\n\t\t\t} else {\n\t\t\t\twindow.console.log(`_handleSignalingError failed with reason ${error.reason}`);\n\t\t\t\treject(DeviceError.ChannelConnectionError);\n\t\t\t}\n\t\t};\n\n\t\tthis._handleSignalingClose = (event) => {\n\t\t\tif (event.code === 4000) {\n\t\t\t\tthis.cancel(DeviceError.DeviceNotFound);\n\t\t\t} else {\n\t\t\t\twindow.console.log(`_handleSignalingClose failed with event ${event}, code ${event.code}`);\n\t\t\t\tthis.cancel(DeviceError.ChannelConnectionError);\n\t\t\t}\n\t\t};\n\n\t\tthis._signalingChannel.addEventListener('message', this._handleSignalingMessage);\n\t\tthis._signalingChannel.addEventListener('error', this._handleSignalingError);\n\t\tthis._signalingChannel.addEventListener('close', this._handleSignalingClose);\n\n\t\tthis._dataChannel.onopen = onChannelOpen;\n\t\tthis._controlChannel.onopen = onChannelOpen;\n\t\tthis._negotiationChannel.onopen = onChannelOpen;\n\n\t\tthis._dataChannel.onerror = onChannelError;\n\t\tthis._controlChannel.onerror = onChannelError;\n\t\tthis._negotiationChannel.onerror = onChannelError;\n\t}\n\n\t/**\n\t * Remove hooks that were installed for signaling purposes\n\t * @private\n\t */\n\t_removeSignalingHooks() {\n\t\tthis._signalingChannel.removeEventListener('message', this._handleSignalingMessage);\n\t\tthis._signalingChannel.removeEventListener('error', this._handleSignalingError);\n\t\tthis._signalingChannel.removeEventListener('close', this._handleSignalingClose);\n\n\t\tthis._dataChannel.onopen = null;\n\t\tthis._controlChannel.onopen = null;\n\t\tthis._negotiationChannel.onopen = null;\n\n\t\tthis._dataChannel.onerror = null;\n\t\tthis._controlChannel.onerror = null;\n\t\tthis._negotiationChannel.onerror = null;\n\t}\n}\n","<template>\n  <div id=\"app\">\n\t\t<div class=\"sfp-title\">\n\t\t\t<h3 class=\"status\">DSDB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{status}}</h3>\n\t\t</div>\n\t\t<div class=\"control\">\n\t\t\t<img id=\"logo\" alt=\"Vue logo\" src=\"./assets/logo.png\">\n\t\t\t<input class=\"device-id\"\n        type=\"text\"\n        name=\"Device Code\"\n        placeholder=\"Input device code here\"\n        v-model=\"deviceCode\">\n\t\t\t<button class=\"connect btn\" \n        :disabled=\"this.status==='Connecting'\"\n        @click=\"onconnect\">\n        {{connectBtnText}} \n      </button>\n\t\t\t<button class=\"run btn\"\n        @click=\"onrun\"\n        :disabled=\"runBtnDisabled\">\n        {{runButtonText}}\n      </button>\n\t\t</div>\n    <div id=\"main-panel\">\n      <div id=\"bitfile-select\">\n        <el-upload\n          class=\"upload-bitfile\"\n          drag\n          action=\"do-nothing\"\n          multiple>\n          <i class=\"el-icon-upload\"></i>\n          <div class=\"el-upload__text\">Drag bitfile here or <em>Click Here</em></div>\n          <div class=\"el-upload__tip\" slot=\"tip\">Only support *.lvbitx *.bin</div>\n        </el-upload>\n      </div>\n      <div id=\"register-list\">\n        <div id=\"input-pins\">\n          <h3>Input Pins</h3>\n          <p>x</p>\n          <input type=\"number\" name=\"x\" id=\"\" v-model.number=\"x\" @change=\"onx\">\n          <p>y</p>\n          <input type=\"number\" name=\"y\" id=\"\" v-model.number=\"y\" @change=\"ony\">\n        </div>\n        <div id=\"output-pins\">\n          <h3>Output Pins</h3>\n          <p>z</p>\n          <input type=\"number\" name=\"z\" id=\"\" v-model.number=\"z\" readonly>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as jcWebPeer from './jc-web-peer/src/index.js';\n\nconst InstrumentState = Object.freeze({\n  Unconnect: \"Not connected\",\n  Idle: \"Idle\",\n  Connecting: \"Connecting\",\n  Running: \"Running\"\n})\n\nexport default {\n  name: 'app',\n  components: {\n  },\n  data: function() {\n    return {\n      username: 'fpgacloud',\n      deviceCode: '',\n      instrument: '',\n      status: InstrumentState.Unconnect,\n      signalServer: 'wss://sigserver.multisim.com:1339',\n      runButtonText: 'Run',\n      connectBtnText: 'Connect',\n      runBtnDisabled: true,\n      x: 1,\n      y: 1,\n      z: 2,\n    }\n  },\n  methods: {\n    onconnect: function() {\n      if (this.status === InstrumentState.Unconnect) {\n        this.connect();\n      } else {\n        if (this.status === InstrumentState.Running) {\n          this.stop();\n        }\n        this.disconnect();\n      }\n    },\n    onrun: function() {\n      if (this.status === InstrumentState.Running) {\n        this.stop();\n        this.status = InstrumentState.Idle;\n      } else {\n        this.configureAndRun();\n        this.status = InstrumentState.Running;\n      }\n    },\n    connect: function() {\n      this.status = InstrumentState.Connecting;\n      const afterConnected = () => {\n        window.console.log('Connnect succeffuly!');\n        const initialDeviceCommand = {\n          device: {\n            device: [{\n                command: 'open',\n                username: this.username,\n              }, {\n                command: 'enumerate',\n              }, {\n                command: 'getDeviceInformation',\n              }],\n          }\n        };\n        this.instrument.onclose = () => {\n          this.status = InstrumentState.Unconnect;\n        };\n        this.instrument.ondata = (p_Data) => {\n          window.console.log('data: ');\n          window.console.log(p_Data);\n          // Do something if target send binary data\n        };\n        this.instrument.onresponse = (p_Response) => {\n          window.console.log('response: ');\n          window.console.log(p_Response);\n          if (p_Response.dsdb) {\n            p_Response.dsdb.dsdb.forEach((res) => {\n              switch(res.command) {\n              case 'open':\n                if (!p_Response.hasError) {\n                  this.runBtnDisabled = false;\n                }\n                break;\n              case 'uploadBitFile':\n                break;\n              case 'run':\n                this.runBtnDisabled = false;\n                if (!p_Response.hasError) {\n                  this.status = InstrumentState.Running;\n                }\n                break;\n              case 'write':\n                if (!p_Response.hasError) {\n                  this.z = res.z;\n                } \n                break;\n              case 'close':\n                if (!p_Response.hasError) {\n                  this.status = InstrumentState.Idle;\n                  this.runBtnDisabled = true;\n                }\n                break;\n              }\n            });\n          }\n        };\n        this.instrument.onrestart = () => {\n          this.instrument.sendCommand(initialDeviceCommand);\n        };\n        this.instrument.sendCommand(initialDeviceCommand);\n        this.instrument.sendCommand({\n          dsdb: {\n            dsdb: [{\n                command: 'open',\n              }],\n          }\n        });\n        this.status = InstrumentState.Idle;\n      };\n      this.instrument = new jcWebPeer.Device(new jcWebPeer.SignalingChannel.WebSocket(this.signalServer), this.deviceCode);\n      this.instrument.connect().then(afterConnected,\n        () => {\n          this.status = InstrumentState.Unconnect;\n          window.console.log('Failed to connect via manual connect target');\n        });\n    },\n    disconnect: function() {\n      this.instrument.disconnect();\n    },\n    configureAndRun: function() {\n      this.runBtnDisabled = true;\n      // send configure and run commands\n      this.instrument.sendCommand({\n        dsdb: {\n          dsdb: [{\n            command: 'run',\n          },{\n            command: 'write',\n            x: this.x,\n            y: this.y,\n          }]\n        }\n      });\n    },\n    stop: function() {\n      // send stop command\n      this.instrument.sendCommand({\n        dsdb: {\n          dsdb: [{\n            command: 'stop',\n          }]\n        }\n      });\n    },\n    onx: function() {\n      if(this.status === InstrumentState.Running) {\n        this.instrument.sendCommand({\n          dsdb: {\n            dsdb: [{\n              command: 'write',\n              x: this.x,\n              y: this.y\n            }],\n          }\n        });\n      }\n    },\n    ony: function() {\n      if(this.status === InstrumentState.Running) {\n        this.instrument.sendCommand({\n          dsdb: {\n            dsdb: [{\n              command: 'write',\n              x: this.x,\n              y: this.y\n            }],\n          }\n        });\n      }\n    }\n  },\n  watch: {\n    status: function(newVal) {\n      switch(newVal) {\n      case InstrumentState.Idle:\n        this.connectBtnText = 'Disconnect';\n        this.runButtonText = 'Run';\n        break;\n      case InstrumentState.Running:\n        this.runButtonText = 'Stop';\n        break;\n      case InstrumentState.Unconnect:\n        this.connectBtnText = 'Connect';\n        break;\n      }\n    }\n  }\n}\n</script>\n\n<style>\n@import url(\"//unpkg.com/element-ui@2.9.1/lib/theme-chalk/index.css\");\ninput:hover,\ninput:focus\n{\n    transition: opacity;\n    box-shadow: 0 0 1px 1px var(--sfp-highlight-color);\n    outline: none;\n}\n\ninput {\n  color: var(--sfp-input-input-color, black);\n  pointer-events: all;\n  box-sizing: border-box;\n  /* Need to null these to get rid of browser default style sheets */\n  margin: 0;\n  /* Bumps the text over from the label a bit*/\n  padding-left: 3.5px;\n  padding-top: 0;\n  padding-bottom: 0;\n  /* Needed to make safari behave*/\n  padding-right: 0;\n  /* Safari again */\n  box-shadow: none;\n  border-collapse: separate;\n  border: 1px solid rgb(204, 204, 204);\n  border-radius: 0; /* needed for mobile safari */\n  font-family: var(--sfp-font-family, sans-serif);\n  font-size: var(--sfp-input-font-size, 14px);\n  height: var(--sfp-text-input-height);\n}\n\n.btn {\n  /* opacity: var(--sfp-input-disabled-opacity, 0.5); */\n  font-size: var(--sfp-input-font-size);\n  font-family: var(--sfp-font-family);\n  background: var(--sfp-button-background);\n  height: var(--sfp-text-input-height);\n}\n\n.btn:hover,\n.btn:focus {\n  background: var(--sfp-button-hover-background);\n  color: var(--sfp-button-hover-color);\n  border: 1px solid var(--sfp-button-hover-border-color);\n  box-shadow: var(--sfp-button-hover-box-shadow);\n}\n\n.btn:active {\n  background: var(--sfp-button-active-background, white);\n  color: var(--sfp-button-active-color);\n  border: 1px solid var(--sfp-button-active-border-color);\n}\n\n[disabled] {\n  opacity: var(--sfp-input-disabled-opacity, 0.5);\n  cursor: not-allowed;\n}\n\n.connect {\n  width: 90px;\n}\n\n.connect,\n.run {\n  color: green;\n  border: 1px solid green; \n}\n\n#app {\n  font-family: var(--sfp-font-family);\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  width: 500px;\n  height: 666px;\n  margin: 10px auto;\n  background-color: #f2f2f2;\n}\n\n.sfp-title {\n\theight: 30px;\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: flex-start;\n\talign-items: center;\n\tbackground-color: var(--ni-blue);\n\tcolor: aliceblue;\n  margin-bottom: 15px;\n}\n\n.status {\n\tmargin-left: 10px;\n}\n\n#logo{\n\tpadding-left: 20px;\n\tpadding-right: 20px;\n\twidth: 32px;\n\theight: 32px;\n}\n\n.control {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\talign-items: center;\n\tmargin: 5px;\n}\n\n.device-id {\n\twidth: 166px;\n}\n\n.connect {\n\tmargin-right: 50px;\n}\n\n.run {\n\theight: 30px;\n\twidth: 50px;\n}\n\n#main-panel {\n  margin-top: 20px;\n}\n\n#bitfile-select {\n  display: flex;\n\tflex-direction: row;\n\tjustify-content: center;\n\talign-items: center;\n  padding-top: 20px;\n  margin-bottom: 20px;\n}\n\n.el-upload__tip {\n  text-align: left;\n}\n\n#upload-btn {\n  width: 75px;\n}\n\n#register-list input {\n  margin-top: 10px;\n}\n\n#register-list {\n\tdisplay: flex;\n\tflex-direction: row;\n\tjustify-content: space-around;\n\talign-items: flex-start;\n}\n\n#input-pins {\n  display: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n  margin-right: 20px;\n}\n\n#output-pins {\n  display: flex;\n\tflex-direction: column;\n\tjustify-content: flex-start;\n  margin-left: 20px;\n}\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=a226a2f2&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\nimport ElementUI from 'element-ui'\nimport locale from 'element-ui/lib/locale/lang/en'\n\nVue.use(ElementUI, { locale })\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","module.exports = __webpack_public_path__ + \"img/logo.82b9c7a5.png\";"],"sourceRoot":""}